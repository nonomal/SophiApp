<UserControl
    x:Class="SophiApp.Controls.ExpandingGroup"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:SophiApp.Controls"
    xmlns:converters="clr-namespace:SophiApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SophiApp.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:SophiApp.Models"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d">

    <UserControl.Resources>
        <converters:ActualHeightMultiply x:Key="ActualHeightMultiplyConverter" />
        <Style TargetType="{x:Type ItemsControl}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Width" Value="{Binding Path=ActualWidth, ElementName=PanelContent}" />
        </Style>
        <Style TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0.5" />
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Unaccent}" />
            <Setter Property="Margin" Value="0,10,0,10" />
        </Style>
        <Style TargetType="{x:Type DockPanel}">
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>
        <Style TargetType="{x:Type Viewbox}">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Setter Property="Path.RenderTransform">
                <Setter.Value>
                    <RotateTransform />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Canvas}">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
        </Style>
        <Style x:Key="Style.Grid.Path.Wrapper" TargetType="{x:Type Grid}">
            <Setter Property="Grid.Column" Value="2" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>
        <Style x:Key="Style.Grid.Header" TargetType="{x:Type Grid}">
            <Setter Property="DockPanel.Dock" Value="Top" />
            <Setter Property="MinHeight" Value="40" />
        </Style>
        <Style TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
            <Setter Property="Data" Value="M15.1484 12.3516L15.8516 11.6484L8 3.79688L0.148438 11.6484L0.851562 12.3516L8 5.20312L15.1484 12.3516Z" />
        </Style>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="DockPanel.Dock" Value="Bottom" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Bottom" />
            <Setter Property="ScrollViewer.Tag">
                <Setter.Value>
                    <sys:Double>1.0</sys:Double>
                </Setter.Value>
            </Setter>
            <Setter Property="ScrollViewer.Height">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource ActualHeightMultiplyConverter}">
                        <Binding ElementName="PanelControlContent" Path="ActualHeight" />
                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type local:ExpandingGroup}">
            <Setter Property="MinWidth" Value="450" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Header" Value="{Binding Header, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Description" Value="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Background" Value="{DynamicResource Brush.View.Background}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Foreground}" />
            <Setter Property="Margin" Value="20,0,0,20" />
            <Setter Property="Id" Value="{Binding Id}" />
        </Style>
    </UserControl.Resources>
    <UserControl.Template>
        <ControlTemplate>
            <DockPanel x:Name="PanelContent">
                <Grid Style="{StaticResource Style.Grid.Header}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Grid
                        x:Name="HeaderWrapper"
                        Grid.Column="0"
                        Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                        MouseEnter="Header_MouseEnter"
                        MouseLeave="HeaderWrapper_MouseLeave">
                        <TextBlock
                            x:Name="TextBlockHeader"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Style="{DynamicResource NormalText}"
                            Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                            TextWrapping="Wrap" />
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Click="ContextMenu_HeaderCopyClick" Header="{DynamicResource Localization.Element.ContextMenu.Header.Copy}" />
                                <MenuItem Click="ContextMenu_DescriptionCopyClick" Header="{DynamicResource Localization.Element.ContextMenu.Description.Copy}" />
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                    <Grid MouseLeftButtonDown="ExpandingGroup_MouseLeftButtonDown" Style="{StaticResource Style.Grid.Path.Wrapper}">
                        <Viewbox x:Name="ViewboxArrow">
                            <Canvas>
                                <Path />
                            </Canvas>
                        </Viewbox>
                    </Grid>
                </Grid>
                <ScrollViewer x:Name="ScrollViewContent">
                    <StackPanel x:Name="PanelControlContent">
                        <Border />
                        <ItemsControl
                            x:Name="ItemsControlContent"
                            Margin="-5"
                            ItemsSource="{Binding ChildElements}">
                            <ItemsControl.Resources>
                                <DataTemplate DataType="{x:Type models:CheckBox}">
                                    <controls:CheckBox
                                        Margin="0,10,0,12"
                                        Command="{Binding Path=Command, RelativeSource={RelativeSource AncestorType={x:Type controls:ExpandingGroup}}}"
                                        Status="{Binding Status, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </ItemsControl.Resources>
                        </ItemsControl>
                        <Border />
                    </StackPanel>
                </ScrollViewer>
            </DockPanel>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Status}" Value="DISABLED">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ScrollViewContent"
                                    Storyboard.TargetProperty="Tag"
                                    To="1"
                                    Duration="0:0:0.4" />
                                <DoubleAnimation
                                    Storyboard.TargetName="ViewboxArrow"
                                    Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                    To="0"
                                    Duration="0:0:0.4" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ScrollViewContent"
                                    Storyboard.TargetProperty="Tag"
                                    To="0"
                                    Duration="0:0:0.4" />
                                <DoubleAnimation
                                    Storyboard.TargetName="ViewboxArrow"
                                    Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                    To="180"
                                    Duration="0:0:0.4" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.DebugMode}" Value="True">
                    <Setter TargetName="TextBlockHeader" Property="Text">
                        <Setter.Value>
                            <MultiBinding StringFormat="{}VId {0} Id {1} | {2}">
                                <Binding Path="ViewId" />
                                <Binding Path="Id" />
                                <Binding Path="Header" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>