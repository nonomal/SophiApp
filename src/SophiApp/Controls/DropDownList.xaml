<UserControl
    x:Class="SophiApp.Controls.DropDownList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SophiApp.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    PreviewMouseWheel="DropDownList_PreviewMouseWheel">

    <UserControl.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
        </Style>
        <Style x:Key="Style.Viewbox.Button.Wrapper" TargetType="{x:Type Viewbox}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="12" />
        </Style>
        <Style x:Key="Style.Grid.Button.Wrapper" TargetType="{x:Type Grid}">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style TargetType="{x:Type Popup}">
            <Setter Property="Placement" Value="Bottom" />
            <Setter Property="PlacementTarget" Value="{Binding ElementName=BorderContent}" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="PopupAnimation" Value="Slide" />
            <Setter Property="StaysOpen" Value="False" />
            <Setter Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>
        <Style TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Unaccent}" />
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid x:Name="GridContainer" Background="{DynamicResource Brush.Window.Background}">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource Brush.Window.Foreground}"
                                Style="{DynamicResource NormalText}"
                                Text="{Binding}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="GridContainer" Property="Background" Value="{DynamicResource Brush.Window.Element.Hover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type local:DropDownList}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Foreground}" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Width" Value="156" />
        </Style>
    </UserControl.Resources>
    <UserControl.Template>
        <ControlTemplate>
            <Border x:Name="BorderContent">
                <Grid>
                    <Button x:Name="ButtonOpenPopup" Click="ButtonOpenPopup_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Grid Background="{DynamicResource Brush.Window.Background}" Style="{StaticResource Style.Grid.Button.Wrapper}">
                                    <TextBlock
                                        x:Name="Text1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource Brush.Window.Foreground}"
                                        Style="{DynamicResource NormalText}"
                                        Text="{Binding Path=SelectedText, RelativeSource={RelativeSource AncestorType={x:Type local:DropDownList}}}" />
                                    <Grid
                                        Width="32"
                                        Height="32"
                                        HorizontalAlignment="Right">
                                        <Viewbox Style="{StaticResource Style.Viewbox.Button.Wrapper}">
                                            <Canvas Width="12" Height="12">
                                                <Path Data="M6 8.09766L11.3613 2.73633L11.8887 3.26367L6 9.15234L0.111328 3.26367L0.638672 2.73633L6 8.09766Z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="ButtonClosePopup" Click="ButtonClosePopup_Click">
                        <Button.Template>
                            <ControlTemplate>
                                <Grid Background="{DynamicResource Brush.Window.Background}" Style="{StaticResource Style.Grid.Button.Wrapper}">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource Brush.Window.Foreground}"
                                        Style="{DynamicResource NormalText}"
                                        Text="{Binding Path=SelectedText, RelativeSource={RelativeSource AncestorType={x:Type local:DropDownList}}, UpdateSourceTrigger=PropertyChanged}" />
                                    <Grid
                                        Width="32"
                                        Height="32"
                                        HorizontalAlignment="Right">
                                        <Viewbox Style="{StaticResource Style.Viewbox.Button.Wrapper}">
                                            <Canvas Width="12" Height="12">
                                                <Path Data="M6 3.90234L11.3613 9.26367L11.8887 8.73633L6 2.84766L0.111328 8.73633L0.638672 9.26367L6 3.90234Z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Popup x:Name="Popup">
                        <Border x:Name="BorderPopup">
                            <ListBox
                                x:Name="ListBoxContent"
                                Margin="0"
                                Padding="0"
                                HorizontalContentAlignment="Stretch"
                                Background="Transparent"
                                BorderThickness="0"
                                ItemsSource="{Binding Path=Source, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                SelectionChanged="ListBoxContent_SelectionChanged" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger SourceName="Popup" Property="IsOpen" Value="True">
                    <Setter Property="local:DropDownList.IsOpened" Value="True" />
                    <Setter TargetName="ButtonOpenPopup" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="ButtonClosePopup" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BorderContent" Property="BorderThickness" Value="1,1,1,0" />
                    <Setter TargetName="BorderPopup" Property="BorderThickness" Value="1,0,1,1" />
                </Trigger>
                <Trigger SourceName="Popup" Property="IsOpen" Value="False">
                    <Setter Property="local:DropDownList.IsOpened" Value="False" />
                    <Setter TargetName="ButtonClosePopup" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="ButtonOpenPopup" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BorderContent" Property="BorderThickness" Value="1" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>